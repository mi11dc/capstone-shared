{"version":3,"file":"shared.mjs","sources":["../../src/app/shared-ui/input/input.component.ts","../../src/app/shared-ui/input/input.component.html","../../src/app/shared-ui/select/select.component.ts","../../src/app/shared-ui/select/select.component.html","../../src/app/shared-ui/input2/input2.component.ts","../../src/app/shared-ui/input2/input2.component.html","../../src/app/shared-ui/form-error/form-error.component.ts","../../src/app/shared-ui/form-error/form-error.component.html","../../src/app/shared-ui/datepicker/datepicker.component.ts","../../src/app/shared-ui/datepicker/datepicker.component.html","../../src/app/shared-ui/text-area/text-area.component.ts","../../src/app/shared-ui/text-area/text-area.component.html","../../src/app/shared-ui/checkbox/checkbox.component.ts","../../src/app/shared-ui/checkbox/checkbox.component.html","../../src/app/shared-ui/radio/radio.component.ts","../../src/app/shared-ui/radio/radio.component.html","../../src/app/shared-ui/shared-ui.module.ts","../../src/environments/environment.ts","../../src/app/core/services/api.service.ts","../../src/app/core/services/notification.service.ts","../../src/app/core/services/error.service.ts","../../src/app/core/services/global-error-handler.service.ts","../../src/app/core/services/loader.service.ts","../../src/app/core/services/utility.service.ts","../../src/app/core/interceptors/loader-interceptor.service.ts","../../src/app/core/guards/auth.guard.ts","../../src/app/core/interceptors/token.interceptor.service.ts","../../src/app/core/core.module.ts","../../src/app/core/pipe/table-search.pipe.ts","../../src/app/core/constants/constants.ts","../../shared.ts"],"sourcesContent":["import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css']\n})\nexport class InputComponent implements OnInit {\n\n  @Input() className: string = \"\";\n  @Input() inputClassName: string = \"\";\n  @Input() placeHolder: string = \"\";\n  @Input() value: string = \"\";\n  @Input() required: boolean = false;\n  @Input() pattern: string = \"\";\n  @Input() label: string = \"\";\n\n  @Input() requierdMessage: string = \"\";\n  @Input() patternMessage: string = \"\";\n  @Input() readonly: boolean = false;\n\n  @Output() newValue = new EventEmitter();\n\n  inputForm: any;\n  textsubmit = false;\n  counter = 0;\n\n  constructor(\n    private FB: FormBuilder,\n  ) {\n  }\n\n  get f() {\n    return this.inputForm.controls;\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.setDefaultData();\n    });\n  }\n\n  setDefaultData() {\n    this.inputForm = this.FB.group({\n      text: ['']\n    });\n    if (!this.className) {\n      this.className = 'form-group';\n    }\n    if (!this.inputClassName) {\n      this.inputClassName = 'form-control';\n    }\n    if (!this.placeHolder) {\n      this.placeHolder = 'Enter text';\n    }\n    if (!this.value) {\n      this.value = '';\n    }\n    if (!this.label) {\n      this.label = 'This';\n    }\n    if (!this.requierdMessage) {\n      if (this.label) {\n        this.requierdMessage = `${this.label} is required`;\n      }\n    }\n    if (!this.patternMessage) {\n      if (this.label) {\n        this.patternMessage = `${this.label} is invalid`;\n      } else {\n        this.patternMessage = `this is invalid`;\n      }\n    }\n    if (this.readonly) {\n      this.f.text.disable();\n    }\n    if (this.required && this.pattern) {\n      this.f.text.setValidators([\n        Validators.required,\n        Validators.pattern(this.pattern),\n      ]);\n    } else if (this.required && !this.pattern) {\n      this.f.text.setValidators([\n        Validators.required\n      ]);\n    } else if (!this.required && this.pattern) {\n      this.f.text.setValidators([\n        Validators.pattern(this.pattern)\n      ]);\n    }\n  }\n\n  onBlurEvent() {\n    this.textsubmit = true;\n    if (!this.inputForm.valid) {\n      return;\n    }\n    this.newValue.emit({\n      count: this.counter,\n      value: this.value\n    });\n  }\n\n  onFocusEvent() {\n    this.counter += 1;\n    this.newValue.emit({\n      count: this.counter,\n      value: this.value\n    });\n  }\n}\n\n","<form [formGroup]=\"inputForm\">\n  <div [ngClass]=\"className\">\n    <input [ngClass]=\"inputClassName\" formControlName=\"text\" [attr.placeholder]=\"placeHolder\" type=\"text\"\n           [(ngModel)]=\"value\" (blur)=\"onBlurEvent()\" (focus)=\"onFocusEvent()\">\n    <div>\n      <small *ngIf=\"textsubmit && f.text.errors\" class=\"text-danger\">\n        <span *ngIf=\"f.text.errors.required\">{{ requierdMessage }}</span>\n        <span *ngIf=\"f.text.errors.pattern\">{{ patternMessage }}</span>\n      </small>\n    </div>\n  </div>\n</form>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SelectComponent,\n    multi: true\n  }]\n})\nexport class SelectComponent implements OnInit, ControlValueAccessor {\n\n  @Input() list = [];\n  @Input() bindLabel: string = \"\";\n  @Input() className = 'form-group';\n  @Input() selectClassName: string = \"\";\n  @Input() placeHolder = 'Select';\n  @Input() value: any;\n  @Input() label = 'List';\n\n  @Input() disabled = false;\n  @Input() multi = false;\n  @Input() required = false;\n  @Input() searchable = false;\n  @Input() clearable = false;\n\n  @Output() selectedValue = new EventEmitter();\n\n  constructor(\n  ) { }\n\n  // This is the initial value set to the component\n  // @param value The input value.\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  // Sets a method in order to propagate changes back to the form.\n  public registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // * Registers a callback to be triggered when the control has been touched.\n  // * @param fn Callback to be triggered when the number input is touched.\n  public registerOnTouched(fn: any) {\n      this.onTouched = fn;\n  }\n\n  // Sets the disabled state through the model\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  // Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n  onTouched: () => any = () => {\n  }\n\n  // Method set in `registerOnChange` to propagate changes back to the form.\n  propagateChange = (_: any) => {\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n       this.setValue();\n    });\n  }\n\n  setValue() {\n    const val = this.value;\n    if (val) {\n      if (this.multi) {\n        if (Array.isArray(val)) {\n          this.value = val;\n        } else {\n          const array = [];\n          array.push(val);\n          this.value = array;\n        }\n      } else {\n        if (Array.isArray(val)) {\n          for (const item of this.value) {\n            if (item) {\n              this.value = item;\n              break;\n            }\n          }\n        } else {\n          this.value = val;\n        }\n      }\n    }\n  }\n\n  onSelectedValueChange() {\n    this.selectedValue.emit(this.value);\n  }\n}\n","<div [ngClass]=\"className\">\n    <ng-select\n            [items]=\"list\"\n            [bindLabel]=\"bindLabel\"\n            [placeholder]=\"placeHolder\"\n            [ngClass]=\"selectClassName\"\n            [multiple]=\"multi\"\n            [required]=\"required\"\n            [(ngModel)]=\"value\"\n            [disabled]=\"disabled\"\n            [clearable]=\"clearable\"\n            [searchable]=\"searchable\"\n            (ngModelChange)=\"onSelectedValueChange()\"\n    ></ng-select>\n</div>\n\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Component({\n  selector: 'app-input-new',\n  templateUrl: './input2.component.html',\n  styleUrls: ['./input2.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: Input2Component,\n    multi: true\n  }]\n})\nexport class Input2Component implements OnInit, ControlValueAccessor {\n\n  @Input() className = 'form-group';\n  @Input() inputClassName = 'form-control';\n  @Input() placeHolder = 'Enter';\n  @Input() value = '';\n  @Input() label = 'Text';\n  @Input() required = false;\n\n  // @Input() pattern = null;\n\n  @Input() readonly = false;\n  @Input() disabled = false;\n\n  @Output() newValue = new EventEmitter();\n\n  constructor() {\n  }\n\n  // This is the initial value set to the component\n  // @param value The input value.\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  // Sets a method in order to propagate changes back to the form.\n  public registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // * Registers a callback to be triggered when the control has been touched.\n  // * @param fn Callback to be triggered when the number input is touched.\n  public registerOnTouched(fn: any) {\n      this.onTouched = fn;\n  }\n\n  // Sets the disabled state through the model\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  // Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n  onTouched: () => any = () => {\n  }\n\n  // Method set in `registerOnChange` to propagate changes back to the form.\n  propagateChange = (_: any) => {\n  }\n\n  ngOnInit() {\n  }\n\n  onInputChange() {\n    this.newValue.emit(this.value);\n  }\n\n}\n","<div [ngClass]=\"className\">\n  <input [ngClass]=\"inputClassName\"\n         [attr.placeholder]=\"placeHolder\"\n         type=\"text\"\n         [(ngModel)]=\"value\"\n         (input)=\"onInputChange()\"\n         [readOnly]=\"readonly\"\n         [disabled]=\"disabled\"\n         [required]=\"required\"\n  >\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-form-label',\n  templateUrl: './form-error.component.html',\n  styleUrls: ['./form-error.component.css']\n})\nexport class FormErrorComponent implements OnInit {\n\n  @Input() errorMessage: string = \"\";\n  @Input() errorClass: string = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<span [ngClass]=\"errorClass\">{{ errorMessage }}</span>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: DatepickerComponent,\n    multi: true\n  }]\n})\nexport class DatepickerComponent implements OnInit, ControlValueAccessor {\n\n  @Input() dateRange = false;\n  @Input() value: any;\n  @Input() placeholder: string = \"\";\n  @Input() class = 'form-group';\n  @Input() inputClassName = 'form-control';\n  @Input() disabled = false;\n  @Input() outsideClick = true;\n\n  @Input() theme: 'default' | 'green' | 'blue' | 'dark-blue' | 'red' | 'orange' = 'default';\n\n  @Output() selectedDate = new EventEmitter();\n\n  bsConfig = {};\n\n  constructor() { }\n\n  // This is the initial value set to the component\n  // @param value The input value.\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  // Sets a method in order to propagate changes back to the form.\n  public registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // * Registers a callback to be triggered when the control has been touched.\n  // * @param fn Callback to be triggered when the number input is touched.\n  public registerOnTouched(fn: any) {\n      this.onTouched = fn;\n  }\n\n  // Sets the disabled state through the model\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  // Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n  onTouched: () => any = () => {\n  }\n\n  // Method set in `registerOnChange` to propagate changes back to the form.\n  propagateChange = (_: any) => {\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.bsConfig = {\n        isAnimated: true,\n        adaptivePosition: true,\n        dateInputFormat: 'YYYY-MM-DD',\n        containerClass: 'theme-' + this.theme\n      };\n    });\n  }\n\n  onDateChange() {\n    this.selectedDate.emit(this.value);\n  }\n}\n","<div [ngClass]=\"class\" class=\"col-xs-12 col-12 col-md-4 form-group\">\n  <input *ngIf=\"!dateRange\"\n         type=\"text\"\n         [attr.placeholder]=\"placeholder\"\n         [ngClass]=\"inputClassName\"\n         bsDatepicker\n         [bsConfig]=\"bsConfig\"\n         [(ngModel)]=\"value\"\n         [isDisabled]=\"disabled\"\n         style=\"border: 1px solid darkgray; background-color: #ffffff; cursor: auto;\" readonly\n         (ngModelChange)=\"onDateChange()\"\n  >\n\n  <input *ngIf=\"dateRange\"\n         type=\"text\"\n         [attr.placeholder]=\"placeholder\"\n         [ngClass]=\"inputClassName\"\n         bsDaterangepicker\n         [bsConfig]=\"bsConfig\"\n         [(ngModel)]=\"value\"\n         [isDisabled]=\"disabled\"\n         style=\"border: 1px solid darkgray; background-color: #ffffff; cursor: auto;\" readonly\n         (ngModelChange)=\"onDateChange()\"\n  >\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Component({\n  selector: 'app-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: ['./text-area.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: TextAreaComponent,\n    multi: true\n  }]\n})\nexport class TextAreaComponent implements OnInit, ControlValueAccessor {\n\n  @Input() className: string;\n  @Input() textAreaClassName: string;\n  @Input() placeholder = 'Enter';\n  @Input() value: string;\n  @Input() label: string;\n\n  @Input() required = false;\n  @Input() readonly = false;\n  @Input() disabled = false;\n  @Input() rows = 1;\n  @Input() cols = 5;\n\n  @Output() areaInputValue = new EventEmitter();\n\n  constructor() { }\n\n  // This is the initial value set to the component\n  // @param value The input value.\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  // Sets a method in order to propagate changes back to the form.\n  public registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // * Registers a callback to be triggered when the control has been touched.\n  // * @param fn Callback to be triggered when the number input is touched.\n  public registerOnTouched(fn: any) {\n      this.onTouched = fn;\n  }\n\n  // Sets the disabled state through the model\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  // Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n  onTouched: () => any = () => {\n  }\n\n  // Method set in `registerOnChange` to propagate changes back to the form.\n  propagateChange = (_: any) => {\n  }\n\n  ngOnInit() {\n  }\n\n  onInputChange() {\n    this.areaInputValue.emit(this.value);\n  }\n\n}\n","<div [ngClass]=\"className\">\n  <textarea\n    [ngClass]=\"textAreaClassName\" [rows]=\"rows\" [cols]=\"cols\" [(ngModel)]=\"value\"\n    [required]=\"required\" [readOnly]=\"readonly\" [disabled]=\"disabled\" (ngModelChange)=\"onInputChange()\"\n  ></textarea>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Component({\n    selector: 'app-checkbox',\n    templateUrl: './checkbox.component.html',\n    styleUrls: ['./checkbox.component.css'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: CheckboxComponent,\n        multi: true\n    }]\n})\nexport class CheckboxComponent implements OnInit, ControlValueAccessor {\n\n    @Input() label: string = \"\";\n    @Input() data = [];\n    @Input() value = [];\n\n    @Input() disabled = false;\n    @Input() required = false;\n\n    @Output() checkInputValue = new EventEmitter();\n\n    constructor() { }\n\n    // This is the initial value set to the component\n    // @param value The input value.\n    public writeValue(value: any) {\n        // this.value = value;\n    }\n\n    // Sets a method in order to propagate changes back to the form.\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // * Registers a callback to be triggered when the control has been touched.\n    // * @param fn Callback to be triggered when the number input is touched.\n    public registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    // Sets the disabled state through the model\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n    onTouched: () => any = () => {\n    }\n\n    // Method set in `registerOnChange` to propagate changes back to the form.\n    propagateChange = (_: any) => {\n    }\n\n    ngOnInit() {\n    }\n\n    isChecked(item) {\n        if (!item) {\n            return false;\n        }\n        return this.value.filter(x => x.toString().toLowerCase() === item.toString().toLowerCase()).length > 0;\n    }\n\n    onCheckClick(item) {\n        if (this.value.filter(x => x.toString().toLowerCase() === item.toString().toLowerCase()).length > 0) {\n            this.value = this.value.filter(x => x.toString().toLowerCase() !== item.toString().toLowerCase());\n        } else {\n            this.value = [...this.value, ...item];\n        }\n        this.checkInputValue.emit(this.value);\n    }\n\n}\n","<div class=\"row\">\n  <ng-container *ngFor=\"let item of data; index as i\">\n    <div [ngClass]=\"item.className\">\n      <input\n        type=\"checkbox\" checked *ngIf=\"isChecked(item.label)\"\n        [ngClass]=\"item.inputClassName\" (click)=\"onCheckClick(item.label)\"\n        [disabled]=\"disabled\" [required]=\"required\"\n      >\n      <input\n        type=\"checkbox\" *ngIf=\"!isChecked(item.label)\"\n        [ngClass]=\"item.inputClassName\" (click)=\"onCheckClick(item.label)\"\n        [disabled]=\"disabled\" [required]=\"required\"\n      >\n      <app-form-label\n        class=\"mx-1\"\n        [errorClass]=\"'form-check-label'\"\n        [errorMessage]=\"item.label\"\n      ></app-form-label>\n    </div>\n  </ng-container>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: RadioComponent,\n    multi: true\n  }]\n})\nexport class RadioComponent implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = \"\";\n  @Input() data = [];\n  @Input() value: string = \"\";\n\n  @Input() disabled = false;\n  @Input() required = false;\n\n  @Output() checkInputValue = new EventEmitter();\n\n  constructor() { }\n\n  // This is the initial value set to the component\n  // @param value The input value.\n  public writeValue(value: any) {\n    // this.value = value;\n  }\n\n  // Sets a method in order to propagate changes back to the form.\n  public registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // * Registers a callback to be triggered when the control has been touched.\n  // * @param fn Callback to be triggered when the number input is touched.\n  public registerOnTouched(fn: any) {\n      this.onTouched = fn;\n  }\n\n  // Sets the disabled state through the model\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  // Called when number input is blurred. Needed to properly implement `ControlValueAccessor`.\n  onTouched: () => any = () => {\n  }\n\n  // Method set in `registerOnChange` to propagate changes back to the form.\n  propagateChange = (_: any) => {\n  }\n\n  ngOnInit() {\n  }\n\n  isChecked(item) {\n    if (!item) {\n      return false;\n    }\n    return this.value.toString().toLowerCase() === item.toString().toLowerCase();\n  }\n\n  onCheckClick(item) {\n    this.value = item;\n    this.checkInputValue.emit(this.value);\n  }\n\n}\n","<div class=\"row\">\n  <ng-container *ngFor=\"let item of data; index as i\">\n    <div [ngClass]=\"item.className\">\n      <input\n        type=\"radio\" checked *ngIf=\"isChecked(item.label)\"\n        [ngClass]=\"item.inputClassName\" (click)=\"onCheckClick(item.label)\"\n        [disabled]=\"disabled\" [required]=\"required\"\n      >\n      <input\n        type=\"radio\" *ngIf=\"!isChecked(item.label)\"\n        [ngClass]=\"item.inputClassName\" (click)=\"onCheckClick(item.label)\"\n        [disabled]=\"disabled\" [required]=\"required\"\n      >\n      <app-form-label\n        class=\"mx-1\"\n        [errorClass]=\"'form-check-label'\"\n        [errorMessage]=\"item.label\"\n      ></app-form-label>\n    </div>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { InputComponent } from './input/input.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SelectComponent } from './select/select.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { Input2Component } from './input2/input2.component';\r\nimport { FormErrorComponent } from './form-error/form-error.component';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TextAreaComponent } from './text-area/text-area.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { RadioComponent } from './radio/radio.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        InputComponent,\r\n        SelectComponent,\r\n        Input2Component,\r\n        FormErrorComponent,\r\n        DatepickerComponent,\r\n        TextAreaComponent,\r\n        CheckboxComponent,\r\n        RadioComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgSelectModule,\r\n        BsDatepickerModule.forRoot()\r\n    ],\r\n    providers: [],\r\n    exports: [\r\n        InputComponent,\r\n        SelectComponent,\r\n        Input2Component,\r\n        FormErrorComponent,\r\n        DatepickerComponent,\r\n        TextAreaComponent,\r\n        CheckboxComponent,\r\n        RadioComponent,\r\n    ]\r\n})\r\nexport class SharedUIModule {\r\n}","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseURL: '',\r\n  // mapAPI: 'AIzaSyCitsCwvMWsltm4FrzPbD1rjksZXAmjwag',\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { retry, shareReplay, catchError } from 'rxjs/operators';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    public get(\r\n        path: string,\r\n        queryParms: any,\r\n        baseUrl: string = environment.baseURL\r\n    ): Observable<any> {\r\n        let httpParams: HttpParams;\r\n        let httpHeaders: HttpHeaders = new HttpHeaders();\r\n        Object.keys(queryParms).forEach(key => {\r\n        if (key === 'headers') {\r\n            Object.keys(queryParms.headers).forEach(hkey => {\r\n                if (queryParms.headers[hkey] !== null && queryParms.headers[hkey] !== '') {\r\n                    // tslint:disable-next-line: quotemark\r\n                    httpHeaders = httpHeaders.set(hkey, queryParms.headers[hkey]);\r\n                }\r\n            });\r\n        } else {\r\n            httpParams = this.getQueryParams(queryParms);\r\n        }\r\n        });\r\n        return this.http\r\n            .get(`${baseUrl + path}`, {\r\n                headers: httpHeaders,\r\n                observe: 'response',\r\n                params: httpParams\r\n            })\r\n            .pipe(\r\n                retry(1),\r\n                shareReplay()\r\n            );\r\n    }\r\n    public getSingle(\r\n        path: string,\r\n        httpHeaders: any = {},\r\n        baseUrl: string = environment.baseURL\r\n    ): Observable<any> {\r\n        return this.http.get(`${baseUrl + path}`, { headers: httpHeaders, observe: 'response' }).pipe(\r\n            retry(1),\r\n            shareReplay()\r\n        );\r\n    }\r\n    public post(\r\n        path: string,\r\n        requestObject: any,\r\n        httpHeaders: any = {},\r\n        baseUrl: string = environment.baseURL\r\n    ): Observable<any> {\r\n        return this.http\r\n        .post(`${baseUrl + path}`, requestObject, {\r\n            headers: httpHeaders,\r\n            observe: 'response'\r\n        })\r\n        .pipe(\r\n            retry(1),\r\n            shareReplay()\r\n        );\r\n    }\r\n\r\n    public postFormEncoded(\r\n        path: string,\r\n        requestObject: any,\r\n        httpHeaders: any = {},\r\n        baseUrl: string = environment.baseURL\r\n    ): Observable<any> {\r\n        const body =  new URLSearchParams();\r\n        if (requestObject) {\r\n            Object.keys(requestObject).forEach(obj => {\r\n                if (requestObject[obj] !== null || requestObject[obj] !== undefined) {\r\n                body.set(obj, requestObject[obj]);\r\n                }\r\n            });\r\n        }\r\n        return this.http\r\n        .post(`${baseUrl + path}`, body.toString(), { headers: {'Content-Type': 'application/x-www-form-urlencoded'}, observe: 'response' })\r\n        .pipe(\r\n            retry(1),\r\n            shareReplay()\r\n        );\r\n    }\r\n\r\n    public uploadFile(\r\n        path: string,\r\n        requestObject: any,\r\n        baseUrl: string = environment.baseURL\r\n    ): Observable<any> {\r\n        return this.http\r\n        .post(`${baseUrl + path}`, requestObject, {\r\n            reportProgress: true,\r\n            observe: 'events'\r\n        })\r\n        .pipe(\r\n            retry(1),\r\n            shareReplay()\r\n        );\r\n    }\r\n\r\n    public put(\r\n        path: string,\r\n        requestObject: any,\r\n        httpHeaders: any = {},\r\n        baseUrl: string = environment.baseURL\r\n    ): Observable<any> {\r\n        return this.http\r\n        .put(`${baseUrl + path}`, requestObject, {\r\n            headers: httpHeaders,\r\n            observe: 'response'\r\n        })\r\n        .pipe(\r\n            retry(1),\r\n            shareReplay()\r\n        );\r\n    }\r\n    public delete(\r\n        path: string,\r\n        httpHeaders: any = {},\r\n        baseUrl: string = environment.baseURL\r\n    ): Observable<any> {\r\n        return this.http.delete(`${baseUrl + path}`, { headers: httpHeaders, observe: 'response' }).pipe(\r\n            shareReplay()\r\n        );\r\n    }\r\n    \r\n    private getQueryParams(queryParams: any) {\r\n        let queryString: HttpParams = new HttpParams();\r\n        Object.keys(queryParams).forEach(param => {\r\n        if (param !== 'headers') {\r\n            if (queryParams[param] !== null && queryParams[param] !== '') {\r\n            const value = queryParams[param].toString().trim();\r\n            queryString = queryString.append(param, value);\r\n            }\r\n        }\r\n        });\r\n        return queryString;\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n// import { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n    constructor(\r\n        // private toastService: ToastrService,\r\n        private zone: NgZone\r\n    ) { }\r\n\r\n    showSuccess(message: string): void {\r\n        // Had an issue with the snackbar being ran outside of angular's zone.\r\n        this.zone.run(() => {\r\n            // this.toastService.success(message, 'Success');\r\n        });\r\n    }\r\n\r\n    showError(message: string): void {\r\n        this.zone.run(() => {\r\n            // The second parameter is the text in the button. \r\n            // In the third, we send in the css class for the snack bar.\r\n            // this.toastService.error(message, 'Error');\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ErrorService {\r\n\r\n    getClientErrorMessage(error: Error): string {\r\n        return error.message ?\r\n                error.message :\r\n                error.toString();\r\n    }\r\n\r\n    getServerErrorMessage(error: HttpErrorResponse): string {\r\n        return navigator.onLine ?\r\n                error.error.message ? error.error.message : error.message :\r\n                'No Internet Connection';\r\n    }\r\n}\r\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n// import { LoggingService } from './logging.service';\r\nimport { ErrorService } from './error.service';\r\nimport { NotificationService } from './notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandlerService implements ErrorHandler {\r\n    constructor(private injector: Injector) {}\r\n\r\n    handleError(error: Error | HttpErrorResponse) {\r\n        const errorService = this.injector.get(ErrorService);\r\n        // const logger = this.injector.get(LoggingService);\r\n        const notifier = this.injector.get(NotificationService);\r\n        const router = this.injector.get(Router);\r\n        let message;\r\n        if (error instanceof HttpErrorResponse) {\r\n        // Server error\r\n            console.log('server')\r\n            if (error.status !== 401) {\r\n                // UtilityService.clearLocalStorage();\r\n                // router.navigate(['auth']);\r\n                // console.log('status')\r\n                message = errorService.getServerErrorMessage(error);\r\n                notifier.showError(message);\r\n            }\r\n        } else {\r\n        // Client Error\r\n        // console.log('client')\r\n        // message = errorService.getClientErrorMessage(error);\r\n        // notifier.showError(message);\r\n        }\r\n        // Always log errors\r\n        // logger.logError(message, stackTrace);\r\n        console.error(error);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LoaderService {\r\n    // loader state maintain: not any\r\n    private loaderSubject = new Subject<any>();\r\n    loaderState = this.loaderSubject.asObservable();\r\n\r\n    constructor() {}\r\n    show() {\r\n        // loader state maintain\r\n        this.loaderSubject.next({ show: true });\r\n    }\r\n    hide() {\r\n        // loader state maintain\r\n        this.loaderSubject.next({ show: false });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class UtilityService {\r\n    public static convertObjectToJson(res: any): any {\r\n        return JSON.parse(JSON.stringify(res.body));\r\n    }\r\n    public static setLocalStorage(property: string, value: string): void {\r\n        localStorage.setItem(property, value);\r\n    }\r\n    public static setMultiLocalStorage(array): void {\r\n        array.forEach(item => {\r\n            localStorage.setItem(item[0], item[1]);\r\n        });\r\n    }\r\n    public static getLocalStorage(property: string): string|null {\r\n        if (localStorage.getItem(property)) {\r\n            return localStorage.getItem(property);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    public static removeItemLocalStorage(property: string) {\r\n        if (localStorage.getItem(property)) {\r\n            localStorage.removeItem(property);\r\n        }\r\n    }\r\n    public static clearLocalStorage() {\r\n        localStorage.clear();\r\n    }\r\n    public static createParameterizedUrl(url: string, params: any): string {\r\n        let newUrl = url;\r\n        Object.keys(params).forEach(param => {\r\n            const regex = new RegExp('{' + param + '}', 'g');\r\n            newUrl = newUrl.replace(regex, params[param]);\r\n        });\r\n        return newUrl;\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse\r\n} from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\nimport { LoaderService } from '../services/loader.service';\r\nimport { Observable } from 'rxjs';\r\nimport { NotificationService } from '../services/notification.service';\r\nimport { UtilityService } from '../services/utility.service';\r\n\r\n@Injectable()\r\nexport class LoaderInterceptorService implements HttpInterceptor {\r\n    private totalRequests = 0;\r\n    constructor(private loaderService: LoaderService, private injector: Injector) {}\r\n\r\n    intercept(\r\n        req: HttpRequest<any>,\r\n        next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n        this.totalRequests++;\r\n        this.showLoader();\r\n        const notifier = this.injector.get(NotificationService);\r\n        return next.handle(req).pipe(\r\n            tap(\r\n                (event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse) {\r\n                    if (event.body) {\r\n                        // const doNotShowMsgUrl = Constants.DO_NOT_SHOW_MSG.find(url => event.url.indexOf(url) >= 0 || event.url.indexOf('display') >= 0);\r\n                        const doNotShowMsgUrl = '';\r\n                        if (!doNotShowMsgUrl) {\r\n                            const {message} = UtilityService.convertObjectToJson(event);\r\n                            if (message) {\r\n                            notifier.showSuccess(message);\r\n                            }\r\n                        }\r\n                    }\r\n                    this.onEnd();\r\n                }\r\n                },\r\n                (err: any) => {\r\n                    this.onEnd();\r\n                }\r\n            )\r\n        );\r\n    }\r\n    private onEnd(): void {\r\n        this.totalRequests--;\r\n        if (this.totalRequests === 0) {\r\n            this.hideLoader();\r\n        }\r\n    }\r\n    private showLoader(): void {\r\n        this.loaderService.show();\r\n    }\r\n    private hideLoader(): void {\r\n        this.loaderService.hide();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    ActivatedRouteSnapshot,\r\n    CanActivate,\r\n    Router,\r\n    RouterStateSnapshot,\r\n    UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router) {}\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<boolean> | Promise<boolean> | boolean {\r\n        if (localStorage.getItem('token')) {\r\n            // logged in so return true\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/auth/login']);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptService {\r\n\r\n    constructor() { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        const user = localStorage.getItem('token');\r\n        if (user && this.notByPassRoute(request.url)) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: 'Bearer ' + user\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n\r\n    notByPassRoute(requestUrl: string) {\r\n        return true;\r\n        // return ! (requestUrl.includes(config.partialUrls.countries));\r\n    }\r\n}\r\n","/**\r\n * CoreModule is used mainly for singleton services, universal components, guards, interceptors etc...\r\n * It should be imported in AppModule, no other module should import this, since we need the singleton instance\r\n * If the CoreModule is imported more than once than it will throw the below error\r\n * 'Core Module is already loaded, You should only load CoreModule in AppModule'\r\n */\r\n\r\nimport { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\r\n\r\nimport { ApiService } from './services/api.service';\r\nimport { NotificationService } from './services/notification.service';\r\nimport { ErrorService } from './services/error.service';\r\nimport { GlobalErrorHandlerService } from './services/global-error-handler.service';\r\nimport { LoaderService } from './services/loader.service';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { LoaderInterceptorService } from './interceptors/loader-interceptor.service';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { UtilityService } from './services/utility.service';\r\nimport { TokenInterceptService } from './interceptors/token.interceptor.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        HttpClientModule,\r\n    ],\r\n    declarations: [\r\n    ],\r\n    providers: [\r\n        ApiService,\r\n        NotificationService,\r\n        ErrorService,\r\n        AuthGuard,\r\n        { provide: ErrorHandler, useClass: GlobalErrorHandlerService },\r\n        LoaderService,\r\n        UtilityService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: LoaderInterceptorService,\r\n            multi: true\r\n        },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: TokenInterceptService,\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class CoreModule {\r\n    constructor(@SkipSelf() @Optional() parentModule: CoreModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'Core Module is already loaded, You should only load CoreModule in AppModule'\r\n            );\r\n        }\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'tableFilter'\r\n})\r\n\r\nexport class TableSearchPipe implements PipeTransform {\r\n    transform(array: any, query: string, searchfrom: string[]): any {\r\n        if (query) {\r\n            return this.filter(query, array, searchfrom);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    filter(query: string, array: any, from: string[]) {\r\n        for (const item in from) {\r\n            let mustreturn = false;\r\n            array.map(x => {\r\n                if (x[from[parseInt(item, 10)]].toString().toLowerCase().indexOf(query.toString().toLowerCase()) > -1 ) {\r\n                    mustreturn = true;\r\n                }\r\n            });\r\n            if (mustreturn) {\r\n                return _.filter(array, y =>\r\n                    y[from[parseInt(item, 10)]].toString().toLowerCase().indexOf(query.toString().toLowerCase()) > -1\r\n                );\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n}\r\n","import { RouteInfo } from '../models/global.model';\r\n\r\nexport const Constants = {\r\n    limitOptions: [\r\n        { value: 5 },\r\n        { value: 10 },\r\n        { value: 20 },\r\n        { value: 50 },\r\n        { value: 100 },\r\n        { value: 500 }\r\n    ],\r\n    ROUTES: [\r\n        {\r\n            id: 1,\r\n            path: '/dashboard',\r\n            title: 'Dashboard',\r\n            type: 'link',\r\n            icontype: 'nc-icon nc-bank'\r\n        }, {\r\n            id: 2,\r\n            path: '/users',\r\n            title: 'Users',\r\n            type: 'link',\r\n            icontype: 'nc-icon nc-single-02'\r\n        }, {\r\n            id: 3,\r\n            path: '/posts',\r\n            title: 'Posts',\r\n            type: 'link',\r\n            icontype: 'nc-icon nc-paper'\r\n        }, {\r\n            id: 4,\r\n            path: '/staff',\r\n            title: 'Staff management',\r\n            type: 'sub',\r\n            collapse: 'staff',\r\n            icontype: 'nc-icon nc-laptop',\r\n            children: [\r\n                { path: 'list', title: 'View members', ab:'V' },\r\n                { path: 'create', title: 'Create member', ab:'C' }\r\n            ]\r\n        }, {\r\n            id: 5,\r\n            path: '/tickets',\r\n            title: 'Tickets',\r\n            type: 'link',\r\n            icontype: 'nc-icon nc-email-85'\r\n        }, {\r\n            id: 6,\r\n            path: '/reports',\r\n            title: 'Reports',\r\n            type: 'link',\r\n            icontype: 'nc-icon nc-chart-pie-36'\r\n        }, {\r\n            id: 7,\r\n            path: '/settings',\r\n            title: 'Settings',\r\n            type: 'sub',\r\n            collapse: 'settings',\r\n            icontype: 'nc-icon nc-settings-gear-65',\r\n            children: [\r\n                { path: 'chat-categories', title: 'Chat categories', ab: 'CC' },\r\n                { path: 'abusive-words', title: 'Abusive words', ab:'AW' },\r\n                { path: 'expression-icons', title: 'Expression Icons', ab:'EI' },\r\n                { path: 'cl-post', title: 'CL Post', ab:'CP' },\r\n                { path: 'plan-amount', title: 'Plan Amount', ab:'PA' },\r\n                { path: 'faq', title: 'FAQ', ab:'FAQ' }\r\n            ]\r\n        }\r\n    ]\r\n    // ,\r\n    // reaction: [\r\n    //     {\r\n    //         reactionId: 1,\r\n    //         description: \"one star\",\r\n    //         isForPost: true,\r\n    //         isForComment: false,\r\n    //         isForCommentReply: false,\r\n    //         image: \"https://conscia-link-data.s3.eu-west-2.amazonaws.com/reactions/one-star.png\"\r\n    //     },\r\n    //     {\r\n    //         reactionId: 2,\r\n    //         description: \"two star\",\r\n    //         isForPost: true,\r\n    //         isForComment: false,\r\n    //         isForCommentReply: false,\r\n    //         image: \"https://conscia-link-data.s3.eu-west-2.amazonaws.com/reactions/two-star.png\"\r\n    //     },\r\n    //     {\r\n    //         reactionId: 3,\r\n    //         description: \"three star\",\r\n    //         isForPost: true,\r\n    //         isForComment: false,\r\n    //         isForCommentReply: false,\r\n    //         image: \"https://conscia-link-data.s3.eu-west-2.amazonaws.com/reactions/three-star.png\"\r\n    //     },\r\n    //     {\r\n    //         reactionId: 4,\r\n    //         description: \"four star\",\r\n    //         isForPost: true,\r\n    //         isForComment: false,\r\n    //         isForCommentReply: false,\r\n    //         image: \"https://conscia-link-data.s3.eu-west-2.amazonaws.com/reactions/four-star.png\"\r\n    //     },\r\n    //     {\r\n    //         reactionId: 5,\r\n    //         description: \"five star\",\r\n    //         isForPost: true,\r\n    //         isForComment: false,\r\n    //         isForCommentReply: false,\r\n    //         image: \"https://conscia-link-data.s3.eu-west-2.amazonaws.com/reactions/five-star.png\"\r\n    //     }\r\n    // ],\r\n    // countries: [\r\n    //     {\r\n    //         \"countryId\": 1,\r\n    //         \"name\": \"Afghanistan\",\r\n    //         \"iso2\": \"AF\",\r\n    //         \"iso3\": \"AFG\",\r\n    //         \"code\": \"+93\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/AFG.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 2,\r\n    //         \"name\": \"Albania\",\r\n    //         \"iso2\": \"AL\",\r\n    //         \"iso3\": \"ALB\",\r\n    //         \"code\": \"+355\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ALB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 3,\r\n    //         \"name\": \"Algeria\",\r\n    //         \"iso2\": \"DZ\",\r\n    //         \"iso3\": \"DZA\",\r\n    //         \"code\": \"+213\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/DZA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 4,\r\n    //         \"name\": \"American Samoa\",\r\n    //         \"iso2\": \"AS\",\r\n    //         \"iso3\": \"ASM\",\r\n    //         \"code\": \"+1 684\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ASM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 5,\r\n    //         \"name\": \"Andorra\",\r\n    //         \"iso2\": \"AD\",\r\n    //         \"iso3\": \"AND\",\r\n    //         \"code\": \"+376\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/AND.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 6,\r\n    //         \"name\": \"Angola\",\r\n    //         \"iso2\": \"AO\",\r\n    //         \"iso3\": \"AGO\",\r\n    //         \"code\": \"+244\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/AGO.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 7,\r\n    //         \"name\": \"Anguilla\",\r\n    //         \"iso2\": \"AI\",\r\n    //         \"iso3\": \"AIA\",\r\n    //         \"code\": \"+1 264\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/AIA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 8,\r\n    //         \"name\": \"Antarctica\",\r\n    //         \"iso2\": \"AQ\",\r\n    //         \"iso3\": \"ATA\",\r\n    //         \"code\": \"+672\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ATA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 9,\r\n    //         \"name\": \"Argentina\",\r\n    //         \"iso2\": \"AR\",\r\n    //         \"iso3\": \"ARG\",\r\n    //         \"code\": \"+54\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ARG.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 10,\r\n    //         \"name\": \"Armenia\",\r\n    //         \"iso2\": \"AM\",\r\n    //         \"iso3\": \"ARM\",\r\n    //         \"code\": \"+374\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ARM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 11,\r\n    //         \"name\": \"Aruba\",\r\n    //         \"iso2\": \"AW\",\r\n    //         \"iso3\": \"ABW\",\r\n    //         \"code\": \"+297\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ABW.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 12,\r\n    //         \"name\": \"Australia\",\r\n    //         \"iso2\": \"AU\",\r\n    //         \"iso3\": \"AUS\",\r\n    //         \"code\": \"+61\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/AUS.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 13,\r\n    //         \"name\": \"Austria\",\r\n    //         \"iso2\": \"AT\",\r\n    //         \"iso3\": \"AUT\",\r\n    //         \"code\": \"+43\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/AUT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 14,\r\n    //         \"name\": \"Azerbaijan\",\r\n    //         \"iso2\": \"AZ\",\r\n    //         \"iso3\": \"AZE\",\r\n    //         \"code\": \"+994\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/AZE.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 15,\r\n    //         \"name\": \"Bahamas\",\r\n    //         \"iso2\": \"BS\",\r\n    //         \"iso3\": \"BHS\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BHS.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 16,\r\n    //         \"name\": \"Bahrain\",\r\n    //         \"iso2\": \"BH\",\r\n    //         \"iso3\": \"BHR\",\r\n    //         \"code\": \"+973\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BHR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 17,\r\n    //         \"name\": \"Bangladesh\",\r\n    //         \"iso2\": \"BD\",\r\n    //         \"iso3\": \"BGD\",\r\n    //         \"code\": \"+880\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BGD.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 18,\r\n    //         \"name\": \"Barbados\",\r\n    //         \"iso2\": \"BB\",\r\n    //         \"iso3\": \"BRB\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BRB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 19,\r\n    //         \"name\": \"Belarus\",\r\n    //         \"iso2\": \"BY\",\r\n    //         \"iso3\": \"BLR\",\r\n    //         \"code\": \"+375\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BLR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 20,\r\n    //         \"name\": \"Belgium\",\r\n    //         \"iso2\": \"BE\",\r\n    //         \"iso3\": \"BEL\",\r\n    //         \"code\": \"+32\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BEL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 21,\r\n    //         \"name\": \"Belize\",\r\n    //         \"iso2\": \"BZ\",\r\n    //         \"iso3\": \"BLZ\",\r\n    //         \"code\": \"+501\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BLZ.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 22,\r\n    //         \"name\": \"Benin\",\r\n    //         \"iso2\": \"BJ\",\r\n    //         \"iso3\": \"BEN\",\r\n    //         \"code\": \"+229\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BEN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 23,\r\n    //         \"name\": \"Bermuda\",\r\n    //         \"iso2\": \"BM\",\r\n    //         \"iso3\": \"BMU\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BMU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 24,\r\n    //         \"name\": \"Bhutan\",\r\n    //         \"iso2\": \"BT\",\r\n    //         \"iso3\": \"BTN\",\r\n    //         \"code\": \"+975\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BTN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 25,\r\n    //         \"name\": \"Bolivia\",\r\n    //         \"iso2\": \"BO\",\r\n    //         \"iso3\": \"BOL\",\r\n    //         \"code\": \"+591\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BOL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 26,\r\n    //         \"name\": \"Bosnia and Herzegovina\",\r\n    //         \"iso2\": \"BA\",\r\n    //         \"iso3\": \"BIH\",\r\n    //         \"code\": \"+387\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BIH.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 27,\r\n    //         \"name\": \"Botswana\",\r\n    //         \"iso2\": \"BW\",\r\n    //         \"iso3\": \"BWA\",\r\n    //         \"code\": \"+267\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BWA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 28,\r\n    //         \"name\": \"Brazil\",\r\n    //         \"iso2\": \"BR\",\r\n    //         \"iso3\": \"BRA\",\r\n    //         \"code\": \"+55\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BRA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 29,\r\n    //         \"name\": \"British Virgin Islands\",\r\n    //         \"iso2\": \"VG\",\r\n    //         \"iso3\": \"VGB\",\r\n    //         \"code\": \"+1 284\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/VGB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 30,\r\n    //         \"name\": \"Brunei\",\r\n    //         \"iso2\": \"BN\",\r\n    //         \"iso3\": \"BRN\",\r\n    //         \"code\": \"+673\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BRN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 31,\r\n    //         \"name\": \"Bulgaria\",\r\n    //         \"iso2\": \"BG\",\r\n    //         \"iso3\": \"BGR\",\r\n    //         \"code\": \"+359\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BGR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 32,\r\n    //         \"name\": \"Burkina Faso\",\r\n    //         \"iso2\": \"BF\",\r\n    //         \"iso3\": \"BFA\",\r\n    //         \"code\": \"+226\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BFA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 33,\r\n    //         \"name\": \"Burundi\",\r\n    //         \"iso2\": \"BI\",\r\n    //         \"iso3\": \"BDI\",\r\n    //         \"code\": \"+257\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BDI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 34,\r\n    //         \"name\": \"Cambodia\",\r\n    //         \"iso2\": \"KH\",\r\n    //         \"iso3\": \"KHM\",\r\n    //         \"code\": \"+855\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/KHM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 35,\r\n    //         \"name\": \"Cameroon\",\r\n    //         \"iso2\": \"CM\",\r\n    //         \"iso3\": \"CMR\",\r\n    //         \"code\": \"+237\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CMR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 36,\r\n    //         \"name\": \"Canada\",\r\n    //         \"iso2\": \"CA\",\r\n    //         \"iso3\": \"CAN\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CAN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 37,\r\n    //         \"name\": \"Cape Verde\",\r\n    //         \"iso2\": \"CV\",\r\n    //         \"iso3\": \"CPV\",\r\n    //         \"code\": \"+238\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CPV.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 38,\r\n    //         \"name\": \"Cayman Islands\",\r\n    //         \"iso2\": \"KY\",\r\n    //         \"iso3\": \"CYM\",\r\n    //         \"code\": \"+1-345\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CYM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 39,\r\n    //         \"name\": \"Central African Republic\",\r\n    //         \"iso2\": \"CF\",\r\n    //         \"iso3\": \"CAF\",\r\n    //         \"code\": \"+236\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CAF.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 40,\r\n    //         \"name\": \"Chile\",\r\n    //         \"iso2\": \"CL\",\r\n    //         \"iso3\": \"CHL\",\r\n    //         \"code\": \"+56\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CHL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 41,\r\n    //         \"name\": \"China\",\r\n    //         \"iso2\": \"CN\",\r\n    //         \"iso3\": \"CHN\",\r\n    //         \"code\": \"+86\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CHN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 42,\r\n    //         \"name\": \"Colombia\",\r\n    //         \"iso2\": \"CO\",\r\n    //         \"iso3\": \"COL\",\r\n    //         \"code\": \"+57\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/COL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 43,\r\n    //         \"name\": \"Comoros\",\r\n    //         \"iso2\": \"KM\",\r\n    //         \"iso3\": \"COM\",\r\n    //         \"code\": \"+269\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/COM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 44,\r\n    //         \"name\": \"Cook Islands\",\r\n    //         \"iso2\": \"CK\",\r\n    //         \"iso3\": \"COK\",\r\n    //         \"code\": \"+682\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/COK.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 45,\r\n    //         \"name\": \"Costa Rica\",\r\n    //         \"iso2\": \"CR\",\r\n    //         \"iso3\": \"CRI\",\r\n    //         \"code\": \"+506\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CRI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 46,\r\n    //         \"name\": \"Croatia\",\r\n    //         \"iso2\": \"HR\",\r\n    //         \"iso3\": \"HRV\",\r\n    //         \"code\": \"+385\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/HRV.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 47,\r\n    //         \"name\": \"Cuba\",\r\n    //         \"iso2\": \"CU\",\r\n    //         \"iso3\": \"CUB\",\r\n    //         \"code\": \"+53\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CUB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 48,\r\n    //         \"name\": \"Curacao\",\r\n    //         \"iso2\": \"CW\",\r\n    //         \"iso3\": \"CUW\",\r\n    //         \"code\": \"+599\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CUW.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 49,\r\n    //         \"name\": \"Cyprus\",\r\n    //         \"iso2\": \"CY\",\r\n    //         \"iso3\": \"CYP\",\r\n    //         \"code\": \"+357\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CYP.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 50,\r\n    //         \"name\": \"Czech Republic\",\r\n    //         \"iso2\": \"CZ\",\r\n    //         \"iso3\": \"CZE\",\r\n    //         \"code\": \"+420\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CZE.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 51,\r\n    //         \"name\": \"Democratic Republic of Congo\",\r\n    //         \"iso2\": \"CD\",\r\n    //         \"iso3\": \"COD\",\r\n    //         \"code\": \"+243\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/COD.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 52,\r\n    //         \"name\": \"Denmark\",\r\n    //         \"iso2\": \"DK\",\r\n    //         \"iso3\": \"DNK\",\r\n    //         \"code\": \"+45\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/DNK.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 53,\r\n    //         \"name\": \"Djibouti\",\r\n    //         \"iso2\": \"DJ\",\r\n    //         \"iso3\": \"DJI\",\r\n    //         \"code\": \"+253\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/DJI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 54,\r\n    //         \"name\": \"Dominica\",\r\n    //         \"iso2\": \"DM\",\r\n    //         \"iso3\": \"DMA\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/DMA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 55,\r\n    //         \"name\": \"Dominican Republic\",\r\n    //         \"iso2\": \"DO\",\r\n    //         \"iso3\": \"DOM\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/DOM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 56,\r\n    //         \"name\": \"East Timor\",\r\n    //         \"iso2\": \"TL\",\r\n    //         \"iso3\": \"TLS\",\r\n    //         \"code\": \"+670\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TLS.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 57,\r\n    //         \"name\": \"Ecuador\",\r\n    //         \"iso2\": \"EC\",\r\n    //         \"iso3\": \"ECU\",\r\n    //         \"code\": \"+593\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ECU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 58,\r\n    //         \"name\": \"Egypt\",\r\n    //         \"iso2\": \"EG\",\r\n    //         \"iso3\": \"EGY\",\r\n    //         \"code\": \"+20\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/EGY.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 59,\r\n    //         \"name\": \"El Salvador\",\r\n    //         \"iso2\": \"SV\",\r\n    //         \"iso3\": \"SLV\",\r\n    //         \"code\": \"+503\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SLV.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 60,\r\n    //         \"name\": \"Equatorial Guinea\",\r\n    //         \"iso2\": \"GQ\",\r\n    //         \"iso3\": \"GNQ\",\r\n    //         \"code\": \"+240\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GNQ.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 61,\r\n    //         \"name\": \"Eritrea\",\r\n    //         \"iso2\": \"ER\",\r\n    //         \"iso3\": \"ERI\",\r\n    //         \"code\": \"+291\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ERI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 62,\r\n    //         \"name\": \"Estonia\",\r\n    //         \"iso2\": \"EE\",\r\n    //         \"iso3\": \"EST\",\r\n    //         \"code\": \"+372\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/EST.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 63,\r\n    //         \"name\": \"Ethiopia\",\r\n    //         \"iso2\": \"ET\",\r\n    //         \"iso3\": \"ETH\",\r\n    //         \"code\": \"+251\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ETH.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 64,\r\n    //         \"name\": \"Falkland Islands\",\r\n    //         \"iso2\": \"FK\",\r\n    //         \"iso3\": \"FLK\",\r\n    //         \"code\": \"+500\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/FLK.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 65,\r\n    //         \"name\": \"Faroe Islands\",\r\n    //         \"iso2\": \"FO\",\r\n    //         \"iso3\": \"FRO\",\r\n    //         \"code\": \"+298\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/FRO.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 66,\r\n    //         \"name\": \"Fiji\",\r\n    //         \"iso2\": \"FJ\",\r\n    //         \"iso3\": \"FJI\",\r\n    //         \"code\": \"+679\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/FJI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 67,\r\n    //         \"name\": \"Finland\",\r\n    //         \"iso2\": \"FI\",\r\n    //         \"iso3\": \"FIN\",\r\n    //         \"code\": \"+358\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/FIN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 68,\r\n    //         \"name\": \"France\",\r\n    //         \"iso2\": \"FR\",\r\n    //         \"iso3\": \"FRA\",\r\n    //         \"code\": \"+33\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/FRA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 69,\r\n    //         \"name\": \"French Polynesia\",\r\n    //         \"iso2\": \"PF\",\r\n    //         \"iso3\": \"PYF\",\r\n    //         \"code\": \"+689\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PYF.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 70,\r\n    //         \"name\": \"Gabon\",\r\n    //         \"iso2\": \"GA\",\r\n    //         \"iso3\": \"GAB\",\r\n    //         \"code\": \"+241\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GAB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 71,\r\n    //         \"name\": \"Gambia\",\r\n    //         \"iso2\": \"GM\",\r\n    //         \"iso3\": \"GMB\",\r\n    //         \"code\": \"+220\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GMB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 72,\r\n    //         \"name\": \"Georgia\",\r\n    //         \"iso2\": \"GE\",\r\n    //         \"iso3\": \"GEO\",\r\n    //         \"code\": \"+995\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GEO.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 73,\r\n    //         \"name\": \"Germany\",\r\n    //         \"iso2\": \"DE\",\r\n    //         \"iso3\": \"DEU\",\r\n    //         \"code\": \"+49\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/DEU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 74,\r\n    //         \"name\": \"Ghana\",\r\n    //         \"iso2\": \"GH\",\r\n    //         \"iso3\": \"GHA\",\r\n    //         \"code\": \"+233\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GHA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 75,\r\n    //         \"name\": \"Gibraltar\",\r\n    //         \"iso2\": \"GI\",\r\n    //         \"iso3\": \"GIB\",\r\n    //         \"code\": \"+350\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GIB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 76,\r\n    //         \"name\": \"Greece\",\r\n    //         \"iso2\": \"GR\",\r\n    //         \"iso3\": \"GRC\",\r\n    //         \"code\": \"+30\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GRC.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 77,\r\n    //         \"name\": \"Greenland\",\r\n    //         \"iso2\": \"GL\",\r\n    //         \"iso3\": \"GRL\",\r\n    //         \"code\": \"+299\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GRL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 78,\r\n    //         \"name\": \"Guadeloupe\",\r\n    //         \"iso2\": \"GP\",\r\n    //         \"iso3\": \"GLP\",\r\n    //         \"code\": \"+590\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GLP.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 79,\r\n    //         \"name\": \"Guam\",\r\n    //         \"iso2\": \"GU\",\r\n    //         \"iso3\": \"GUM\",\r\n    //         \"code\": \"+1 671\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GUM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 80,\r\n    //         \"name\": \"Guatemala\",\r\n    //         \"iso2\": \"GT\",\r\n    //         \"iso3\": \"GTM\",\r\n    //         \"code\": \"+502\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GTM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 81,\r\n    //         \"name\": \"Guinea\",\r\n    //         \"iso2\": \"GN\",\r\n    //         \"iso3\": \"GIN\",\r\n    //         \"code\": \"+224\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GIN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 82,\r\n    //         \"name\": \"Guinea-Bissau\",\r\n    //         \"iso2\": \"GW\",\r\n    //         \"iso3\": \"GNB\",\r\n    //         \"code\": \"+245\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GNB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 83,\r\n    //         \"name\": \"Guyana\",\r\n    //         \"iso2\": \"GY\",\r\n    //         \"iso3\": \"GUY\",\r\n    //         \"code\": \"+592\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GUY.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 84,\r\n    //         \"name\": \"Haiti\",\r\n    //         \"iso2\": \"HT\",\r\n    //         \"iso3\": \"HTI\",\r\n    //         \"code\": \"+509\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/HTI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 85,\r\n    //         \"name\": \"Honduras\",\r\n    //         \"iso2\": \"HN\",\r\n    //         \"iso3\": \"HND\",\r\n    //         \"code\": \"+504\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/HND.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 86,\r\n    //         \"name\": \"Hong Kong\",\r\n    //         \"iso2\": \"HK\",\r\n    //         \"iso3\": \"HKG\",\r\n    //         \"code\": \"+852\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/HKG.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 87,\r\n    //         \"name\": \"Hungary\",\r\n    //         \"iso2\": \"HU\",\r\n    //         \"iso3\": \"HUN\",\r\n    //         \"code\": \"+36\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/HUN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 88,\r\n    //         \"name\": \"Iceland\",\r\n    //         \"iso2\": \"IS\",\r\n    //         \"iso3\": \"ISL\",\r\n    //         \"code\": \"+354\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ISL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 89,\r\n    //         \"name\": \"India\",\r\n    //         \"iso2\": \"IN\",\r\n    //         \"iso3\": \"IND\",\r\n    //         \"code\": \"+91\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/IND.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 90,\r\n    //         \"name\": \"Indonesia\",\r\n    //         \"iso2\": \"ID\",\r\n    //         \"iso3\": \"IDN\",\r\n    //         \"code\": \"+62\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/IDN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 91,\r\n    //         \"name\": \"Iran\",\r\n    //         \"iso2\": \"IR\",\r\n    //         \"iso3\": \"IRN\",\r\n    //         \"code\": \"+98\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/IRN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 92,\r\n    //         \"name\": \"Iraq\",\r\n    //         \"iso2\": \"IQ\",\r\n    //         \"iso3\": \"IRQ\",\r\n    //         \"code\": \"+964\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/IRQ.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 93,\r\n    //         \"name\": \"Ireland\",\r\n    //         \"iso2\": \"IE\",\r\n    //         \"iso3\": \"IRL\",\r\n    //         \"code\": \"+353\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/IRL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 94,\r\n    //         \"name\": \"Isle of Man\",\r\n    //         \"iso2\": \"IM\",\r\n    //         \"iso3\": \"IMN\",\r\n    //         \"code\": \"+44\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/IMN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 95,\r\n    //         \"name\": \"Israel\",\r\n    //         \"iso2\": \"IL\",\r\n    //         \"iso3\": \"ISR\",\r\n    //         \"code\": \"+972\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ISR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 96,\r\n    //         \"name\": \"Italy\",\r\n    //         \"iso2\": \"IT\",\r\n    //         \"iso3\": \"ITA\",\r\n    //         \"code\": \"+39\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ITA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 97,\r\n    //         \"name\": \"Ivory Coast\",\r\n    //         \"iso2\": \"CI\",\r\n    //         \"iso3\": \"CIV\",\r\n    //         \"code\": \"+225\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CIV.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 98,\r\n    //         \"name\": \"Jamaica\",\r\n    //         \"iso2\": \"JM\",\r\n    //         \"iso3\": \"JAM\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/JAM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 99,\r\n    //         \"name\": \"Japan\",\r\n    //         \"iso2\": \"JP\",\r\n    //         \"iso3\": \"JPN\",\r\n    //         \"code\": \"+81\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/JPN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 100,\r\n    //         \"name\": \"Jordan\",\r\n    //         \"iso2\": \"JO\",\r\n    //         \"iso3\": \"JOR\",\r\n    //         \"code\": \"+962\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/JOR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 101,\r\n    //         \"name\": \"Kazakhstan\",\r\n    //         \"iso2\": \"KZ\",\r\n    //         \"iso3\": \"KAZ\",\r\n    //         \"code\": \"+7\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/KAZ.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 102,\r\n    //         \"name\": \"Kenya\",\r\n    //         \"iso2\": \"KE\",\r\n    //         \"iso3\": \"KEN\",\r\n    //         \"code\": \"+254\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/KEN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 103,\r\n    //         \"name\": \"Kiribati\",\r\n    //         \"iso2\": \"KI\",\r\n    //         \"iso3\": \"KIR\",\r\n    //         \"code\": \"+686\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/KIR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 104,\r\n    //         \"name\": \"Kosovo\",\r\n    //         \"iso2\": \"XK\",\r\n    //         \"iso3\": \"XKX\",\r\n    //         \"code\": \"+381\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/XKX.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 105,\r\n    //         \"name\": \"Kuwait\",\r\n    //         \"iso2\": \"KW\",\r\n    //         \"iso3\": \"KWT\",\r\n    //         \"code\": \"+965\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/KWT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 106,\r\n    //         \"name\": \"Kyrgyzstan\",\r\n    //         \"iso2\": \"KG\",\r\n    //         \"iso3\": \"KGZ\",\r\n    //         \"code\": \"+996\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/KGZ.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 107,\r\n    //         \"name\": \"Laos\",\r\n    //         \"iso2\": \"LA\",\r\n    //         \"iso3\": \"LAO\",\r\n    //         \"code\": \"+856\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LAO.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 108,\r\n    //         \"name\": \"Latvia\",\r\n    //         \"iso2\": \"LV\",\r\n    //         \"iso3\": \"LVA\",\r\n    //         \"code\": \"+371\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LVA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 109,\r\n    //         \"name\": \"Lebanon\",\r\n    //         \"iso2\": \"LB\",\r\n    //         \"iso3\": \"LBN\",\r\n    //         \"code\": \"+961\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LBN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 110,\r\n    //         \"name\": \"Lesotho\",\r\n    //         \"iso2\": \"LS\",\r\n    //         \"iso3\": \"LSO\",\r\n    //         \"code\": \"+266\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LSO.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 111,\r\n    //         \"name\": \"Liberia\",\r\n    //         \"iso2\": \"LR\",\r\n    //         \"iso3\": \"LBR\",\r\n    //         \"code\": \"+231\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LBR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 112,\r\n    //         \"name\": \"Libya\",\r\n    //         \"iso2\": \"LY\",\r\n    //         \"iso3\": \"LBY\",\r\n    //         \"code\": \"+218\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LBY.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 113,\r\n    //         \"name\": \"Liechtenstein\",\r\n    //         \"iso2\": \"LI\",\r\n    //         \"iso3\": \"LIE\",\r\n    //         \"code\": \"+423\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LIE.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 114,\r\n    //         \"name\": \"Lithuania\",\r\n    //         \"iso2\": \"LT\",\r\n    //         \"iso3\": \"LTU\",\r\n    //         \"code\": \"+370\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LTU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 115,\r\n    //         \"name\": \"Luxembourg\",\r\n    //         \"iso2\": \"LU\",\r\n    //         \"iso3\": \"LUX\",\r\n    //         \"code\": \"+352\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LUX.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 116,\r\n    //         \"name\": \"Macau\",\r\n    //         \"iso2\": \"MO\",\r\n    //         \"iso3\": \"MAC\",\r\n    //         \"code\": \"+853\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MAC.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 117,\r\n    //         \"name\": \"Macedonia\",\r\n    //         \"iso2\": \"MK\",\r\n    //         \"iso3\": \"MKD\",\r\n    //         \"code\": \"+389\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MKD.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 118,\r\n    //         \"name\": \"Madagascar\",\r\n    //         \"iso2\": \"MG\",\r\n    //         \"iso3\": \"MDG\",\r\n    //         \"code\": \"+261\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MDG.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 119,\r\n    //         \"name\": \"Malawi\",\r\n    //         \"iso2\": \"MW\",\r\n    //         \"iso3\": \"MWI\",\r\n    //         \"code\": \"+265\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MWI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 120,\r\n    //         \"name\": \"Malaysia\",\r\n    //         \"iso2\": \"MY\",\r\n    //         \"iso3\": \"MYS\",\r\n    //         \"code\": \"+60\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MYS.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 121,\r\n    //         \"name\": \"Maldives\",\r\n    //         \"iso2\": \"MV\",\r\n    //         \"iso3\": \"MDV\",\r\n    //         \"code\": \"+960\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MDV.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 122,\r\n    //         \"name\": \"Mali\",\r\n    //         \"iso2\": \"ML\",\r\n    //         \"iso3\": \"MLI\",\r\n    //         \"code\": \"+223\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MLI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 123,\r\n    //         \"name\": \"Malta\",\r\n    //         \"iso2\": \"MT\",\r\n    //         \"iso3\": \"MLT\",\r\n    //         \"code\": \"+356\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MLT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 124,\r\n    //         \"name\": \"Marshall Islands\",\r\n    //         \"iso2\": \"MH\",\r\n    //         \"iso3\": \"MHL\",\r\n    //         \"code\": \"+692\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MHL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 125,\r\n    //         \"name\": \"Mauritania\",\r\n    //         \"iso2\": \"MR\",\r\n    //         \"iso3\": \"MRT\",\r\n    //         \"code\": \"+222\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MRT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 126,\r\n    //         \"name\": \"Mauritius\",\r\n    //         \"iso2\": \"MU\",\r\n    //         \"iso3\": \"MUS\",\r\n    //         \"code\": \"+230\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MUS.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 127,\r\n    //         \"name\": \"Mexico\",\r\n    //         \"iso2\": \"MX\",\r\n    //         \"iso3\": \"MEX\",\r\n    //         \"code\": \"+52\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MEX.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 128,\r\n    //         \"name\": \"Micronesia\",\r\n    //         \"iso2\": \"FM\",\r\n    //         \"iso3\": \"FSM\",\r\n    //         \"code\": \"+691\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/FSM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 129,\r\n    //         \"name\": \"Moldova\",\r\n    //         \"iso2\": \"MD\",\r\n    //         \"iso3\": \"MDA\",\r\n    //         \"code\": \"+373\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MDA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 130,\r\n    //         \"name\": \"Monaco\",\r\n    //         \"iso2\": \"MC\",\r\n    //         \"iso3\": \"MCO\",\r\n    //         \"code\": \"+377\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MCO.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 131,\r\n    //         \"name\": \"Mongolia\",\r\n    //         \"iso2\": \"MN\",\r\n    //         \"iso3\": \"MNG\",\r\n    //         \"code\": \"+976\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MNG.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 132,\r\n    //         \"name\": \"Montenegro\",\r\n    //         \"iso2\": \"ME\",\r\n    //         \"iso3\": \"MNE\",\r\n    //         \"code\": \"+382\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MNE.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 133,\r\n    //         \"name\": \"Montserrat\",\r\n    //         \"iso2\": \"MS\",\r\n    //         \"iso3\": \"MSR\",\r\n    //         \"code\": \"+1 664\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MSR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 134,\r\n    //         \"name\": \"Morocco\",\r\n    //         \"iso2\": \"MA\",\r\n    //         \"iso3\": \"MAR\",\r\n    //         \"code\": \"+212\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MAR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 135,\r\n    //         \"name\": \"Mozambique\",\r\n    //         \"iso2\": \"MZ\",\r\n    //         \"iso3\": \"MOZ\",\r\n    //         \"code\": \"+258\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MOZ.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 136,\r\n    //         \"name\": \"Myanmar [Burma]\",\r\n    //         \"iso2\": \"MM\",\r\n    //         \"iso3\": \"MMR\",\r\n    //         \"code\": \"+95\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MMR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 137,\r\n    //         \"name\": \"Namibia\",\r\n    //         \"iso2\": \"NA\",\r\n    //         \"iso3\": \"NAM\",\r\n    //         \"code\": \"+264\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NAM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 138,\r\n    //         \"name\": \"Nauru\",\r\n    //         \"iso2\": \"NR\",\r\n    //         \"iso3\": \"NRU\",\r\n    //         \"code\": \"+674\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NRU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 139,\r\n    //         \"name\": \"Nepal\",\r\n    //         \"iso2\": \"NP\",\r\n    //         \"iso3\": \"NPL\",\r\n    //         \"code\": \"+977\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NPL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 140,\r\n    //         \"name\": \"Netherlands\",\r\n    //         \"iso2\": \"NL\",\r\n    //         \"iso3\": \"NLD\",\r\n    //         \"code\": \"+31\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NLD.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 141,\r\n    //         \"name\": \"New Caledonia\",\r\n    //         \"iso2\": \"NC\",\r\n    //         \"iso3\": \"NCL\",\r\n    //         \"code\": \"+687\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NCL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 142,\r\n    //         \"name\": \"New Zealand\",\r\n    //         \"iso2\": \"NZ\",\r\n    //         \"iso3\": \"NZL\",\r\n    //         \"code\": \"+64\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NZL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 143,\r\n    //         \"name\": \"Nicaragua\",\r\n    //         \"iso2\": \"NI\",\r\n    //         \"iso3\": \"NIC\",\r\n    //         \"code\": \"+505\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NIC.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 144,\r\n    //         \"name\": \"Niger\",\r\n    //         \"iso2\": \"NE\",\r\n    //         \"iso3\": \"NER\",\r\n    //         \"code\": \"+227\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NER.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 145,\r\n    //         \"name\": \"Nigeria\",\r\n    //         \"iso2\": \"NG\",\r\n    //         \"iso3\": \"NGA\",\r\n    //         \"code\": \"+234\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NGA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 146,\r\n    //         \"name\": \"Niue\",\r\n    //         \"iso2\": \"NU\",\r\n    //         \"iso3\": \"NIU\",\r\n    //         \"code\": \"+683\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NIU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 147,\r\n    //         \"name\": \"Norfolk Island\",\r\n    //         \"iso2\": \"NF\",\r\n    //         \"iso3\": \"NFK\",\r\n    //         \"code\": \"+672\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NFK.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 148,\r\n    //         \"name\": \"North Korea\",\r\n    //         \"iso2\": \"KP\",\r\n    //         \"iso3\": \"PRK\",\r\n    //         \"code\": \"+850\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PRK.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 149,\r\n    //         \"name\": \"Northern Mariana Islands\",\r\n    //         \"iso2\": \"MP\",\r\n    //         \"iso3\": \"MNP\",\r\n    //         \"code\": \"+1 670\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MNP.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 150,\r\n    //         \"name\": \"Norway\",\r\n    //         \"iso2\": \"NO\",\r\n    //         \"iso3\": \"NOR\",\r\n    //         \"code\": \"+47\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/NOR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 151,\r\n    //         \"name\": \"Oman\",\r\n    //         \"iso2\": \"OM\",\r\n    //         \"iso3\": \"OMN\",\r\n    //         \"code\": \"+968\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/OMN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 152,\r\n    //         \"name\": \"Pakistan\",\r\n    //         \"iso2\": \"PK\",\r\n    //         \"iso3\": \"PAK\",\r\n    //         \"code\": \"+92\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PAK.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 153,\r\n    //         \"name\": \"Palau\",\r\n    //         \"iso2\": \"PW\",\r\n    //         \"iso3\": \"PLW\",\r\n    //         \"code\": \"+680\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PLW.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 154,\r\n    //         \"name\": \"Panama\",\r\n    //         \"iso2\": \"PA\",\r\n    //         \"iso3\": \"PAN\",\r\n    //         \"code\": \"+507\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PAN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 155,\r\n    //         \"name\": \"Papua New Guinea\",\r\n    //         \"iso2\": \"PG\",\r\n    //         \"iso3\": \"PNG\",\r\n    //         \"code\": \"+675\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PNG.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 156,\r\n    //         \"name\": \"Paraguay\",\r\n    //         \"iso2\": \"PY\",\r\n    //         \"iso3\": \"PRY\",\r\n    //         \"code\": \"+595\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PRY.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 157,\r\n    //         \"name\": \"Peru\",\r\n    //         \"iso2\": \"PE\",\r\n    //         \"iso3\": \"PER\",\r\n    //         \"code\": \"+51\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PER.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 158,\r\n    //         \"name\": \"Philippines\",\r\n    //         \"iso2\": \"PH\",\r\n    //         \"iso3\": \"PHL\",\r\n    //         \"code\": \"+63\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PHL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 159,\r\n    //         \"name\": \"Pitcairn Islands\",\r\n    //         \"iso2\": \"PN\",\r\n    //         \"iso3\": \"PCN\",\r\n    //         \"code\": \"+870\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PCN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 160,\r\n    //         \"name\": \"Poland\",\r\n    //         \"iso2\": \"PL\",\r\n    //         \"iso3\": \"POL\",\r\n    //         \"code\": \"+48\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/POL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 161,\r\n    //         \"name\": \"Portugal\",\r\n    //         \"iso2\": \"PT\",\r\n    //         \"iso3\": \"PRT\",\r\n    //         \"code\": \"+351\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PRT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 162,\r\n    //         \"name\": \"Puerto Rico\",\r\n    //         \"iso2\": \"PR\",\r\n    //         \"iso3\": \"PRI\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/PRI.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 163,\r\n    //         \"name\": \"Qatar\",\r\n    //         \"iso2\": \"QA\",\r\n    //         \"iso3\": \"QAT\",\r\n    //         \"code\": \"+974\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/QAT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 164,\r\n    //         \"name\": \"Republic of the Congo\",\r\n    //         \"iso2\": \"CG\",\r\n    //         \"iso3\": \"COG\",\r\n    //         \"code\": \"+242\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/COG.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 165,\r\n    //         \"name\": \"Reunion\",\r\n    //         \"iso2\": \"RE\",\r\n    //         \"iso3\": \"REU\",\r\n    //         \"code\": \"+262\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/REU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 166,\r\n    //         \"name\": \"Romania\",\r\n    //         \"iso2\": \"RO\",\r\n    //         \"iso3\": \"ROU\",\r\n    //         \"code\": \"+40\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ROU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 167,\r\n    //         \"name\": \"Russia\",\r\n    //         \"iso2\": \"RU\",\r\n    //         \"iso3\": \"RUS\",\r\n    //         \"code\": \"+7\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/RUS.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 168,\r\n    //         \"name\": \"Rwanda\",\r\n    //         \"iso2\": \"RW\",\r\n    //         \"iso3\": \"RWA\",\r\n    //         \"code\": \"+250\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/RWA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 169,\r\n    //         \"name\": \"Saint Barthélemy\",\r\n    //         \"iso2\": \"BL\",\r\n    //         \"iso3\": \"BLM\",\r\n    //         \"code\": \"+590\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/BLM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 170,\r\n    //         \"name\": \"Saint Helena\",\r\n    //         \"iso2\": \"SH\",\r\n    //         \"iso3\": \"SHN\",\r\n    //         \"code\": \"+290\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SHN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 171,\r\n    //         \"name\": \"Saint Kitts and Nevis\",\r\n    //         \"iso2\": \"KN\",\r\n    //         \"iso3\": \"KNA\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/KNA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 172,\r\n    //         \"name\": \"Saint Lucia\",\r\n    //         \"iso2\": \"LC\",\r\n    //         \"iso3\": \"LCA\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LCA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 173,\r\n    //         \"name\": \"Saint Martin\",\r\n    //         \"iso2\": \"MF\",\r\n    //         \"iso3\": \"MAF\",\r\n    //         \"code\": \"+1 599\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/MAF.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 174,\r\n    //         \"name\": \"Saint Pierre and Miquelon\",\r\n    //         \"iso2\": \"PM\",\r\n    //         \"iso3\": \"SPM\",\r\n    //         \"code\": \"+508\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SPM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 175,\r\n    //         \"name\": \"Saint Vincent and the Grenadines\",\r\n    //         \"iso2\": \"VC\",\r\n    //         \"iso3\": \"VCT\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/VCT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 176,\r\n    //         \"name\": \"Samoa\",\r\n    //         \"iso2\": \"WS\",\r\n    //         \"iso3\": \"WSM\",\r\n    //         \"code\": \"+685\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/WSM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 177,\r\n    //         \"name\": \"San Marino\",\r\n    //         \"iso2\": \"SM\",\r\n    //         \"iso3\": \"SMR\",\r\n    //         \"code\": \"+378\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SMR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 178,\r\n    //         \"name\": \"Sao Tome and Principe\",\r\n    //         \"iso2\": \"ST\",\r\n    //         \"iso3\": \"STP\",\r\n    //         \"code\": \"+239\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/STP.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 179,\r\n    //         \"name\": \"Saudi Arabia\",\r\n    //         \"iso2\": \"SA\",\r\n    //         \"iso3\": \"SAU\",\r\n    //         \"code\": \"+966\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SAU.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 180,\r\n    //         \"name\": \"Senegal\",\r\n    //         \"iso2\": \"SN\",\r\n    //         \"iso3\": \"SEN\",\r\n    //         \"code\": \"+221\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SEN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 181,\r\n    //         \"name\": \"Serbia\",\r\n    //         \"iso2\": \"RS\",\r\n    //         \"iso3\": \"SRB\",\r\n    //         \"code\": \"+381\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SRB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 182,\r\n    //         \"name\": \"Seychelles\",\r\n    //         \"iso2\": \"SC\",\r\n    //         \"iso3\": \"SYC\",\r\n    //         \"code\": \"+248\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SYC.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 183,\r\n    //         \"name\": \"Sierra Leone\",\r\n    //         \"iso2\": \"SL\",\r\n    //         \"iso3\": \"SLE\",\r\n    //         \"code\": \"+232\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SLE.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 184,\r\n    //         \"name\": \"Singapore\",\r\n    //         \"iso2\": \"SG\",\r\n    //         \"iso3\": \"SGP\",\r\n    //         \"code\": \"+65\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SGP.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 185,\r\n    //         \"name\": \"Slovakia\",\r\n    //         \"iso2\": \"SK\",\r\n    //         \"iso3\": \"SVK\",\r\n    //         \"code\": \"+421\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SVK.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 186,\r\n    //         \"name\": \"Slovenia\",\r\n    //         \"iso2\": \"SI\",\r\n    //         \"iso3\": \"SVN\",\r\n    //         \"code\": \"+386\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SVN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 187,\r\n    //         \"name\": \"Solomon Islands\",\r\n    //         \"iso2\": \"SB\",\r\n    //         \"iso3\": \"SLB\",\r\n    //         \"code\": \"+677\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SLB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 188,\r\n    //         \"name\": \"Somalia\",\r\n    //         \"iso2\": \"SO\",\r\n    //         \"iso3\": \"SOM\",\r\n    //         \"code\": \"+252\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SOM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 189,\r\n    //         \"name\": \"South Africa\",\r\n    //         \"iso2\": \"ZA\",\r\n    //         \"iso3\": \"ZAF\",\r\n    //         \"code\": \"+27\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ZAF.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 190,\r\n    //         \"name\": \"South Korea\",\r\n    //         \"iso2\": \"KR\",\r\n    //         \"iso3\": \"KOR\",\r\n    //         \"code\": \"+82\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/KOR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 191,\r\n    //         \"name\": \"South Sudan\",\r\n    //         \"iso2\": \"SS\",\r\n    //         \"iso3\": \"SSD\",\r\n    //         \"code\": \"+211\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SSD.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 192,\r\n    //         \"name\": \"Spain\",\r\n    //         \"iso2\": \"ES\",\r\n    //         \"iso3\": \"ESP\",\r\n    //         \"code\": \"+34\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ESP.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 193,\r\n    //         \"name\": \"Sri Lanka\",\r\n    //         \"iso2\": \"LK\",\r\n    //         \"iso3\": \"LKA\",\r\n    //         \"code\": \"+94\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/LKA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 194,\r\n    //         \"name\": \"Sudan\",\r\n    //         \"iso2\": \"SD\",\r\n    //         \"iso3\": \"SDN\",\r\n    //         \"code\": \"+249\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SDN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 195,\r\n    //         \"name\": \"Suriname\",\r\n    //         \"iso2\": \"SR\",\r\n    //         \"iso3\": \"SUR\",\r\n    //         \"code\": \"+597\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SUR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 196,\r\n    //         \"name\": \"Swaziland\",\r\n    //         \"iso2\": \"SZ\",\r\n    //         \"iso3\": \"SWZ\",\r\n    //         \"code\": \"+268\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SWZ.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 197,\r\n    //         \"name\": \"Sweden\",\r\n    //         \"iso2\": \"SE\",\r\n    //         \"iso3\": \"SWE\",\r\n    //         \"code\": \"+46\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SWE.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 198,\r\n    //         \"name\": \"Switzerland\",\r\n    //         \"iso2\": \"CH\",\r\n    //         \"iso3\": \"CHE\",\r\n    //         \"code\": \"+41\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/CHE.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 199,\r\n    //         \"name\": \"Syria\",\r\n    //         \"iso2\": \"SY\",\r\n    //         \"iso3\": \"SYR\",\r\n    //         \"code\": \"+963\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/SYR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 200,\r\n    //         \"name\": \"Taiwan\",\r\n    //         \"iso2\": \"TW\",\r\n    //         \"iso3\": \"TWN\",\r\n    //         \"code\": \"+886\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TWN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 201,\r\n    //         \"name\": \"Tajikistan\",\r\n    //         \"iso2\": \"TJ\",\r\n    //         \"iso3\": \"TJK\",\r\n    //         \"code\": \"+992\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TJK.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 202,\r\n    //         \"name\": \"Tanzania\",\r\n    //         \"iso2\": \"TZ\",\r\n    //         \"iso3\": \"TZA\",\r\n    //         \"code\": \"+255\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TZA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 203,\r\n    //         \"name\": \"Thailand\",\r\n    //         \"iso2\": \"TH\",\r\n    //         \"iso3\": \"THA\",\r\n    //         \"code\": \"+66\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/THA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 204,\r\n    //         \"name\": \"Togo\",\r\n    //         \"iso2\": \"TG\",\r\n    //         \"iso3\": \"TGO\",\r\n    //         \"code\": \"+228\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TGO.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 205,\r\n    //         \"name\": \"Tokelau\",\r\n    //         \"iso2\": \"TK\",\r\n    //         \"iso3\": \"TKL\",\r\n    //         \"code\": \"+690\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TKL.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 206,\r\n    //         \"name\": \"Trinidad and Tobago\",\r\n    //         \"iso2\": \"TT\",\r\n    //         \"iso3\": \"TTO\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TTO.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 207,\r\n    //         \"name\": \"Tunisia\",\r\n    //         \"iso2\": \"TN\",\r\n    //         \"iso3\": \"TUN\",\r\n    //         \"code\": \"+216\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TUN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 208,\r\n    //         \"name\": \"Turkey\",\r\n    //         \"iso2\": \"TR\",\r\n    //         \"iso3\": \"TUR\",\r\n    //         \"code\": \"+90\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TUR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 209,\r\n    //         \"name\": \"Turkmenistan\",\r\n    //         \"iso2\": \"TM\",\r\n    //         \"iso3\": \"TKM\",\r\n    //         \"code\": \"+993\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TKM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 210,\r\n    //         \"name\": \"Tuvalu\",\r\n    //         \"iso2\": \"TV\",\r\n    //         \"iso3\": \"TUV\",\r\n    //         \"code\": \"+688\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/TUV.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 211,\r\n    //         \"name\": \"Uganda\",\r\n    //         \"iso2\": \"UG\",\r\n    //         \"iso3\": \"UGA\",\r\n    //         \"code\": \"+256\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/UGA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 212,\r\n    //         \"name\": \"Ukraine\",\r\n    //         \"iso2\": \"UA\",\r\n    //         \"iso3\": \"UKR\",\r\n    //         \"code\": \"+380\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/UKR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 213,\r\n    //         \"name\": \"United Arab Emirates\",\r\n    //         \"iso2\": \"AE\",\r\n    //         \"iso3\": \"ARE\",\r\n    //         \"code\": \"+971\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ARE.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 214,\r\n    //         \"name\": \"United Kingdom\",\r\n    //         \"iso2\": \"GB\",\r\n    //         \"iso3\": \"GBR\",\r\n    //         \"code\": \"+44\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/GBR.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 215,\r\n    //         \"name\": \"United States\",\r\n    //         \"iso2\": \"US\",\r\n    //         \"iso3\": \"USA\",\r\n    //         \"code\": \"+1\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/USA.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 216,\r\n    //         \"name\": \"Uruguay\",\r\n    //         \"iso2\": \"UY\",\r\n    //         \"iso3\": \"URY\",\r\n    //         \"code\": \"+598\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/URY.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 217,\r\n    //         \"name\": \"Uzbekistan\",\r\n    //         \"iso2\": \"UZ\",\r\n    //         \"iso3\": \"UZB\",\r\n    //         \"code\": \"+998\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/UZB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 218,\r\n    //         \"name\": \"Vanuatu\",\r\n    //         \"iso2\": \"VU\",\r\n    //         \"iso3\": \"VUT\",\r\n    //         \"code\": \"+678\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/VUT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 219,\r\n    //         \"name\": \"Vatican\",\r\n    //         \"iso2\": \"VA\",\r\n    //         \"iso3\": \"VAT\",\r\n    //         \"code\": \"+39\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/VAT.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 220,\r\n    //         \"name\": \"Venezuela\",\r\n    //         \"iso2\": \"VE\",\r\n    //         \"iso3\": \"VEN\",\r\n    //         \"code\": \"+58\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/VEN.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 221,\r\n    //         \"name\": \"Vietnam\",\r\n    //         \"iso2\": \"VN\",\r\n    //         \"iso3\": \"VNM\",\r\n    //         \"code\": \"+84\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/VNM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 222,\r\n    //         \"name\": \"Western Sahara\",\r\n    //         \"iso2\": \"EH\",\r\n    //         \"iso3\": \"ESH\",\r\n    //         \"code\": \"+212\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ESH.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 223,\r\n    //         \"name\": \"Yemen\",\r\n    //         \"iso2\": \"YE\",\r\n    //         \"iso3\": \"YEM\",\r\n    //         \"code\": \"+967\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/YEM.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 224,\r\n    //         \"name\": \"Zambia\",\r\n    //         \"iso2\": \"ZM\",\r\n    //         \"iso3\": \"ZMB\",\r\n    //         \"code\": \"+260\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ZMB.png\"\r\n    //     },\r\n    //     {\r\n    //         \"countryId\": 225,\r\n    //         \"name\": \"Zimbabwe\",\r\n    //         \"iso2\": \"ZW\",\r\n    //         \"iso3\": \"ZWE\",\r\n    //         \"code\": \"+263\",\r\n    //         \"flag\": \"https://www.countryareacode.net/pictures/flag/ZWE.png\"\r\n    //     }\r\n    // ]\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i2","i3","i2.FormErrorComponent","i1.LoaderService"],"mappings":"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"}